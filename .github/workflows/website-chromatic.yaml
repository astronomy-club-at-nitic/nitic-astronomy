name: website chromatic

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  filter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      website: ${{ steps.changes.outputs.website }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: check for file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/filter.yaml

  publish:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.website == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: setup node
        uses: actions/setup-node@v3
        with:
          # The action will look for `volta.node` first. If `volta.node` isn't defined, then it will look for `engines.node`
          # Refer: https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#node-version-file
          node-version-file: "package.json"

      - name: setup pnpm
        uses: pnpm/action-setup@v2.4.1
        id: pnpm-install
        with:
          # Version of pnpm to install:
          # Optional when there is a packageManager field in the package.json.
          # Refer: https://github.com/pnpm/action-setup#inputs
          run_install: false

      - name: get pnpm store
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: install
        run: pnpm install --frozen-lockfile

      - name: publish
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/website
          # HACK: This is a workaround for the issue that the chromaui/action@v1 doesn't support storybook v7.
          buildScriptName: sb:build

  website-chromatic-check:
    runs-on: ubuntu-latest
    needs: publish
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "publish is successfully executed."
